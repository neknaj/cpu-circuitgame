//
// テストを定義する
//

// 定数のテスト
test true:0->1 {
    -> t;
}

test false:0->1 {
    -> f;
}

// 基本ゲートのテスト
test buf:1->1 {
    t -> t;
    f -> f;
}

test not:1->1 {
    t -> f;
    f -> t;
}

test and:2->1 {
    t t -> t;
    t f -> f;
    f t -> f;
    f f -> f;
}

test or:2->1 {
    t t -> t;
    t f -> t;
    f t -> t;
    f f -> f;
}

test nand:2->1 {
    t t -> f;
    t f -> t;
    f t -> t;
    f f -> t;
}

test xor:2->1 {
    t t -> f;
    t f -> t;
    f t -> t;
    f f -> f;
}

test xnor:2->1 {
    t t -> t;
    t f -> f;
    f t -> f;
    f f -> t;
}

// 多数決回路のテスト
test 3or:3->1 {
    t t t -> t;
    t t f -> t;
    t f t -> t;
    f t t -> t;
    t f f -> t;
    f t f -> t;
    f f t -> t;
    f f f -> f;
}

test 3and:3->1 {
    t t t -> t;
    t t f -> f;
    t f t -> f;
    f t t -> f;
    t f f -> f;
    f t f -> f;
    f f t -> f;
    f f f -> f;
}

// 加算器のテスト
test hAddr:2->2 {
    t t -> t f;
    t f -> f t;
    f t -> f t;
    f f -> f f;
}

test fAddr:3->2 {
    t t t -> t t;
    f t t -> t f;
    t f t -> t f;
    f f t -> f t;
    t t f -> t f;
    f t f -> f t;
    t f f -> f t;
    f f f -> f f;
}

// ラッチ回路のテスト
test sr_latch:2->2 {
    t f -> t f;
    f t -> f t;
    // f f -> ? ?;  // 前の状態を保持
}

// test d_latch:2->2 {
//     t t -> t f;
//     f t -> f t;
//     t f -> ? ?;  // クロックがfの時は前の状態を保持
//     f f -> ? ?;
// }

// 8ビット回路のテスト
test 8buf:8->8 {
    t t t t f f f f -> t t t t f f f f;
    f f f f t t t t -> f f f f t t t t;
}

test 8not:8->8 {
    t t t t f f f f -> f f f f t t t t;
    f f f f t t t t -> t t t t f f f f;
}

test 8or:16->8 {
    t t t t f f f f
    f f f f t t t t -> t t t t t t t t;
    
    t t t t f f f f
    f f f f f f f f -> t t t t f f f f;
    
    f f f f f f f f
    f f f f f f f f -> f f f f f f f f;
}

test 8and:16->8 {
    t t t t f f f f
    t t t t f f f f -> t t t t f f f f;
    
    t t t t f f f f
    f f f f t t t t -> f f f f f f f f;
    
    f f f f f f f f
    f f f f f f f f -> f f f f f f f f;
}

test 8shiftr:8->8 {
    t t t t f f f f -> f t t t t f f f;
    f f f f t t t t -> f f f f f t t t;
}

// 8ビット加算器のテスト
test 8addr:17->9 {
    f
    t t t t f f f f
    f f f f t t t t -> f t t t t t t t t;
    
    t
    t t t t f f f f
    f f f f t t t t -> t f f f f f f f f;
    
    f
    f f f f f f f f
    f f f f f f f f -> f f f f f f f f f;
}

// デコーダーのテスト
test decoder:1->2 {
    t -> t f;
    f -> f t;
}

test 3decoder:3->8 {
    f f f -> t f f f f f f f;
    t f f -> f t f f f f f f;
    f t f -> f f t f f f f f;
    t t f -> f f f t f f f f;
    f f t -> f f f f t f f f;
    t f t -> f f f f f t f f;
    f t t -> f f f f f f t f;
    t t t -> f f f f f f f t;
}

// セレクターのテスト
test selector:17->8 {
    t t t t f f f f
    f f f f t t t t
    t -> t t t t f f f f;
    
    t t t t f f f f
    f f f f t t t t
    f -> f f f f t t t t;
}

// 4マッチのテスト
test 4match:4->1 {
    t t t t -> t;
    f f f f -> f;
    t t f f -> t;
    f f t t -> t;
    t f t f -> t;
    f t f t -> t;
}

// 4偶数・奇数判定のテスト
test 4even:4->1 {
    t t t t -> t;
    t t f f -> t;
    t f t f -> t;
    f f f f -> t;
    t t t f -> f;
    t f f f -> f;
}

test 4odd:4->1 {
    t t t t -> f;
    t t f f -> f;
    t f t f -> f;
    f f f f -> f;
    t t t f -> t;
    t f f f -> t;
}

// 4カウントのテスト
test 4count:4->3 {
    t t t t -> f f t;
    t t f f -> f t f;
    t f t f -> f t f;
    f f f f -> f f f;
    t f f f -> t f f;
    f t f f -> t f f;
}

// OrNandNorAndのテスト
test OrNandNorAnd:19->8 {
    // OR選択 (000)
    f f f
    t t t t f f f f
    f f f f t t t t -> t t t t t t t t;
    
    // NAND選択 (001)
    t f f
    t t t t f f f f
    t t t t f f f f -> f f f f t t t t;
    
    // NOR選択 (010)
    f t f
    t t t t f f f f
    f f f f t t t t -> f f f f f f f f;
    
    // AND選択 (011)
    t t f
    t t t t f f f f
    t t t t f f f f -> t t t t f f f f;
}

// クロック回路のテスト
// test clock:0->1 {
//     -> t;
//     -> f;
//     -> t;
//     -> f;
// }

// インパルス回路のテスト
// test impulse:0->1 {
//     -> t;
//     -> f;
//     -> f;
// }

// 8ビット否定のテスト
test 8nagate:8->8 {
    t t t t f f f f -> t f f f t t t t;
    f f f f t t t t -> f f f f t f f f;
    f f f f f f f f -> f f f f f f f f;
}


// circular依存のテスト
// test circular:1->1 {
//     t -> f;
//     f -> t;
// }

// test circular2:0->1 {
//     -> t;
//     -> f;
//     -> t;
// }

// 4入力ANDとORのテスト
test 4and:4->1 {
    t t t t -> t;
    t t t f -> f;
    t t f f -> f;
    t f f f -> f;
    f f f f -> f;
}

test 4or:4->1 {
    t t t t -> t;
    t t t f -> t;
    t t f f -> t;
    t f f f -> t;
    f f f f -> f;
}

// 8スイッチのテスト
test 8switch:9->8 {
    t t t t f f f f
    t -> t t t t f f f f;
    
    t t t t f f f f
    f -> f f f f f f f f;
    
    f f f f t t t t
    t -> f f f f t t t t;
    
    f f f f t t t t
    f -> f f f f f f f f;
}